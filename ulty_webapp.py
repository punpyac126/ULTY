import streamlit as st
import yfinance as yf
import requests
from streamlit_autorefresh import st_autorefresh
import json

def load_latest_dividend():
    try:
        with open("latest_dividend.json", "r") as f:
            return json.load(f).get("dividend", 0.0)
    except:
        return 0.0

weekly_dividend_usd = load_latest_dividend()

st_autorefresh(interval=5 * 60 * 1000, key="datarefresh")

ULTY_TICKER = "ULTY"
DIVIDEND_PER_SHARE_WEEKLY = 0.1003

def get_stock_price():
    ticker = yf.Ticker(ULTY_TICKER)
    hist = ticker.history(period="1d")
    if not hist.empty:
        return round(hist["Close"].iloc[-1], 2)
    return None

def get_exchange_rate():
    try:
        res = requests.get("https://api.frankfurter.app/latest?from=USD&to=THB")
        data = res.json()
        return round(data["rates"]["THB"], 2)
    except:
        return None

def calculate_weekly_dividend(amount_thb, stock_price_usd, exchange_rate):
    usd = amount_thb / exchange_rate
    shares = usd / stock_price_usd
    dividend_usd = shares * DIVIDEND_PER_SHARE_WEEKLY
    return round(dividend_usd * exchange_rate, 2)

def calculate_required_investment(target_weekly_dividend_thb, stock_price_usd, exchange_rate):
    shares_needed = target_weekly_dividend_thb / (DIVIDEND_PER_SHARE_WEEKLY * exchange_rate)
    total_usd = shares_needed * stock_price_usd
    total_thb = total_usd * exchange_rate
    return round(shares_needed), round(total_thb, 2)

def parse_comma_input(text, default=0.0):
    try:
        return float(text.replace(",", ""))
    except:
        return default

stock_price = get_stock_price()
exchange_rate = get_exchange_rate()

col_logo, col_title = st.columns([1, 8])
with col_logo:
    st.image("yieldmax_logo.png", width=80)
with col_title:
    st.title(" Yieldmax ULTY Calculator (Real-time)")
st.markdown("‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡∏∏‡πâ‡∏ô ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÅ‡∏•‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô ‡πÅ‡∏•‡∏∞‡∏õ‡∏±‡∏ô‡∏ú‡∏•‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå")

col1, col2, col3 = st.columns(3)
col1.metric("üìâ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡∏∏‡πâ‡∏ô ULTY", f"{stock_price} USD" if stock_price else "-")
col2.metric("üí± ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÅ‡∏•‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô", f"{exchange_rate} THB/USD" if exchange_rate else "-")
col3.metric("üí∏ ‡∏õ‡∏±‡∏ô‡∏ú‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î/‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå", f"{DIVIDEND_PER_SHARE_WEEKLY} USD")

st.markdown("---")

mode = st.radio("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏´‡∏°‡∏î‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì", ["üìç ‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡∏õ‡∏±‡∏ô‡∏ú‡∏•‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà", "üíº ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≤‡∏Å‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô", "üîÑ ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏à‡∏∏‡∏î‡∏Ñ‡∏∏‡πâ‡∏°‡∏ó‡∏∏‡∏ô‡πÅ‡∏ö‡∏ö Reinvest"], horizontal=True)

if mode == "üìç ‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡∏õ‡∏±‡∏ô‡∏ú‡∏•‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà":
    st.header("üìå ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏•‡∏á‡∏ó‡∏∏‡∏ô")
    currency = st.selectbox("‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô", ["THB", "USD"], index=0)

    div_mode = st.radio("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏Å‡∏õ‡∏±‡∏ô‡∏ú‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£", ["ü™ô ‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå", "üóìÔ∏è ‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô"], horizontal=True)

    if div_mode == "ü™ô ‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå":
        weekly_input = st.text_input("üí∏ ‡∏õ‡∏±‡∏ô‡∏ú‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå (‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å‡∏†‡∏≤‡∏©‡∏µ 15%)", value="5,000.00")
        weekly_div_net = parse_comma_input(weekly_input, default=5000.0)
        monthly_div_net = weekly_div_net * 4
    else:
        monthly_input = st.text_input("üìÜ ‡∏õ‡∏±‡∏ô‡∏ú‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô (‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å‡∏†‡∏≤‡∏©‡∏µ 15%)", value="20,000.00")
        monthly_div_net = parse_comma_input(monthly_input, default=20000.0)
        weekly_div_net = monthly_div_net / 4

    if stock_price and exchange_rate:
        gross_weekly = weekly_div_net / 0.85
        gross_monthly = gross_weekly * 4
        shares_needed = gross_weekly / (DIVIDEND_PER_SHARE_WEEKLY * exchange_rate)
        total_usd = shares_needed * stock_price
        total_thb = total_usd * exchange_rate

        st.subheader("üìä ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå")
        st.markdown(f"- ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏∏‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ã‡∏∑‡πâ‡∏≠: **{round(shares_needed):,} ‡∏´‡∏∏‡πâ‡∏ô**")
        st.markdown(f"- ‡πÄ‡∏á‡∏¥‡∏ô‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏£‡∏ß‡∏°: **{total_thb:,.2f} ‡∏ö‡∏≤‡∏ó**")
        st.markdown("#### üíµ ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏õ‡∏±‡∏ô‡∏ú‡∏• (‡∏Ñ‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡∏ì‡πå)")
        st.markdown(f"- ‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏±‡∏Å‡∏†‡∏≤‡∏©‡∏µ 15%: **{gross_monthly:,.2f} ‡∏ö‡∏≤‡∏ó / ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô**")
        st.markdown(f"- ‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å‡∏†‡∏≤‡∏©‡∏µ 15%: **{monthly_div_net:,.2f} ‡∏ö‡∏≤‡∏ó / ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô**")
        st.caption("‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÇ‡∏î‡∏¢ gross-up ‡∏¢‡∏≠‡∏î‡∏õ‡∏±‡∏ô‡∏ú‡∏•‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏≤‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°")
    else:
        st.error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏Ñ‡∏≤/‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÅ‡∏•‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠")


elif mode == "üíº ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≤‡∏Å‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô":
    st.header("üìå ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏õ‡∏±‡∏ô‡∏ú‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö")

    investment_input = st.text_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∏‡∏ô (THB)", value="1,000.00")
    investment = parse_comma_input(investment_input, default=1000.0)

    if stock_price and exchange_rate:
        weekly = calculate_weekly_dividend(investment, stock_price, exchange_rate)
        tax_amount = weekly * 0.15
        weekly_after_tax = weekly * 0.85
        monthly = weekly_after_tax * 4
        yearly = weekly_after_tax * 52

        break_even_weeks = investment / weekly_after_tax if weekly_after_tax > 0 else 0
        break_even_months = break_even_weeks / 4.33

        st.success(f"‚úÖ ‡∏õ‡∏±‡∏ô‡∏ú‡∏•‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå (‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å‡∏†‡∏≤‡∏©‡∏µ 15%) ‚âà {weekly_after_tax:,.2f} ‡∏ö‡∏≤‡∏ó")
        st.info(f"üìÖ ‡∏õ‡∏±‡∏ô‡∏ú‡∏•‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ‚âà {monthly:,.2f} ‡∏ö‡∏≤‡∏ó")
        st.warning(f"üìÜ ‡∏õ‡∏±‡∏ô‡∏ú‡∏•‡∏£‡∏≤‡∏¢‡∏õ‡∏µ ‚âà {yearly:,.2f} ‡∏ö‡∏≤‡∏ó")
        st.error(f"üîª ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏´‡∏±‡∏Å‡∏†‡∏≤‡∏©‡∏µ (‡∏ö‡∏≤‡∏ó): {tax_amount:,.2f}")
        st.markdown("---")
        st.markdown("üìå **‡∏à‡∏∏‡∏î‡∏Ñ‡∏∏‡πâ‡∏°‡∏ó‡∏∏‡∏ô (Break-even Point)**")
        st.markdown(f"‚è≥ ‡∏Ñ‡∏∑‡∏ô‡∏ó‡∏∏‡∏ô‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì **{break_even_weeks:,.1f} ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå** ‡∏´‡∏£‡∏∑‡∏≠ **{break_even_months:,.1f} ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô**")
    else:
        st.error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏Ñ‡∏≤/‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÅ‡∏•‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠")


elif mode == "üîÑ ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏à‡∏∏‡∏î‡∏Ñ‡∏∏‡πâ‡∏°‡∏ó‡∏∏‡∏ô‡πÅ‡∏ö‡∏ö Reinvest":
    st.header("üîÅ ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô‡∏ó‡∏∏‡∏ô‡πÇ‡∏î‡∏¢ Reinvest ‡∏õ‡∏±‡∏ô‡∏ú‡∏•‡∏ó‡∏∏‡∏Å‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå")

    st.markdown("### üì• ‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏•‡∏á‡∏ó‡∏∏‡∏ô (‡∏ö‡∏≤‡∏ó)")
    investment_input = st.text_input("üíµ ‡πÄ‡∏á‡∏¥‡∏ô‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô", value="100,000.00")
    investment = parse_comma_input(investment_input, default=100000.0)

    reinvest_stock_price = 6.40
    reinvest_dividend_usd = 0.0875

    if exchange_rate:
        reinvest_usd_thb = exchange_rate

        usd_investment = investment / reinvest_usd_thb
        shares = usd_investment / reinvest_stock_price

        total_received_thb = 0
        weeks = 0

        while total_received_thb < investment:
            dividend_usd = shares * reinvest_dividend_usd
            dividend_thb = dividend_usd * reinvest_usd_thb * 0.85
            total_received_thb += dividend_thb

            reinvested_shares = dividend_thb / reinvest_usd_thb / reinvest_stock_price
            shares += reinvested_shares
            weeks += 1

            if weeks > 1000:
                break

        years = weeks // 52
        months = (weeks % 52) // 4
        days = (weeks % 52) % 4 * 7

        st.success(f"üìÜ ‡∏Ñ‡∏≤‡∏î‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏Ñ‡∏∑‡∏ô‡∏ó‡∏∏‡∏ô‡πÑ‡∏î‡πâ‡πÉ‡∏ô {weeks:,} ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå ‚âà **{years} ‡∏õ‡∏µ {months} ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô {days} ‡∏ß‡∏±‡∏ô**")
        st.info(f"üìà ‡∏õ‡∏±‡∏ô‡∏ú‡∏•‡∏£‡∏ß‡∏°‡∏™‡∏∞‡∏™‡∏°: **{total_received_thb:,.2f} ‡∏ö‡∏≤‡∏ó**")
        st.caption(f"‡πÉ‡∏ä‡πâ‡πÄ‡∏£‡∏ó USDTHB = {reinvest_usd_thb}, ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡∏∏‡πâ‡∏ô = {reinvest_stock_price} USD, ‡∏õ‡∏±‡∏ô‡∏ú‡∏•/‡∏´‡∏∏‡πâ‡∏ô = {reinvest_dividend_usd} USD")
    else:
        st.error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÅ‡∏•‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô USDTHB ‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå‡πÑ‡∏î‡πâ")
